name: test-cepc
scenario: common
backend: local

param: 
  splitter:
    # a sequencer generate a list of job_vars, which are used to generate subjobs of the task.
    my_first_sequencer:    
      type: all_files_in_folder #generate a subjob for each valid file in path     
      param: {path: '/junofs/users/yangyf/jsub/examples/test_cepc/stdhep_files' , suffix: 'stdhep'}
      name_map: {value: stdhep_file} 
    rng_seed:
       type: increment
       param: {first: 1, step: 1}
       name_map: {value: random_seed}

  input:        #files to send to input sandbox
    common:     #location
      simu_macro_template: simu.macro    # filename_in_sandbox: source_file

  workflow:
    my_first_step:      
      type: cepc_sim    #do the CEPC sim
      actvar:
          output_dir: '/junofs/users/yangyf/jsub_out'
          cepcsoft_version: 0.1.0
          event_max: 5



               
